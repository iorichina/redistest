<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
                     http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                     http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
                     http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
                     http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

	<!-- redis连接池的配置 -->
	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxActive" value="${server.redis.pool.maxActive}" />
		<property name="maxIdle" value="${server.redis.pool.maxIdle}" />
		<property name="maxWait" value="${server.redis.pool.maxWait}" />
		<property name="testOnBorrow" value="${server.redis.pool.testOnBorrow}" />
	</bean>

	<!-- redis的连接池pool，不是必选项：timeout/password -->
	<bean id="jedisPool" class="redis.clients.jedis.JedisPool">
		<constructor-arg index="0" ref="jedisPoolConfig" />
		<constructor-arg index="1" value="${server.redis.ip}" />
		<constructor-arg index="2" value="${server.redis.port}"
			type="int" />
	</bean>
	<bean id="jedisPool2" class="redis.clients.jedis.JedisPool">
		<constructor-arg index="0" ref="jedisPoolConfig" />
		<constructor-arg index="1" value="${server.redis2.ip}" />
		<constructor-arg index="2" value="${server.redis2.port}"
			type="int" />
	</bean>

	<!-- jedis -->
	<bean id="jedisUtils" class="com.iorichina.util.JedisUtils"
		destroy-method="destroy">
	</bean>

	<!-- 定时任务 -->
	<bean id="baseCrontab" class="com.iorichina.base.BaseCrontab"
		abstract="true" init-method="init" destroy-method="close">
	</bean>

	<!-- memcache -->
	<bean id="memcachedOperate" class="com.iorichina.util.MemcachedOperate"
	init-method="init" destroy-method="close">
		<property name="memcacheserverMaps" >
			<map>
				<entry key="huya" value="${huya.service.memcacheservers}"/>
			</map>
		</property>
	</bean>
	
</beans>